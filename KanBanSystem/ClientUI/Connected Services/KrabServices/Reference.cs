//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientUI.KrabServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoardDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class BoardDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardListDTO[] CardListsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.UserDTO[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardListDTO[] CardLists {
            get {
                return this.CardListsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardListsField, value) != true)) {
                    this.CardListsField = value;
                    this.RaisePropertyChanged("CardLists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.UserDTO[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardListDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class CardListDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.BoardDTO BoardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardDTO[] CardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.UserDTO CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.BoardDTO Board {
            get {
                return this.BoardField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardField, value) != true)) {
                    this.BoardField = value;
                    this.RaisePropertyChanged("Board");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardDTO[] Cards {
            get {
                return this.CardsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardsField, value) != true)) {
                    this.CardsField = value;
                    this.RaisePropertyChanged("Cards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.UserDTO Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.BoardDTO[] BoardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardActivityDTO[] CardActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardDTO[] CardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardListDTO[] CreatedCardListsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CommentDTO[] UserCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.BoardDTO[] Boards {
            get {
                return this.BoardsField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardsField, value) != true)) {
                    this.BoardsField = value;
                    this.RaisePropertyChanged("Boards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardActivityDTO[] CardActivities {
            get {
                return this.CardActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CardActivitiesField, value) != true)) {
                    this.CardActivitiesField = value;
                    this.RaisePropertyChanged("CardActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardDTO[] Cards {
            get {
                return this.CardsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardsField, value) != true)) {
                    this.CardsField = value;
                    this.RaisePropertyChanged("Cards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardListDTO[] CreatedCardLists {
            get {
                return this.CreatedCardListsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedCardListsField, value) != true)) {
                    this.CreatedCardListsField = value;
                    this.RaisePropertyChanged("CreatedCardLists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CommentDTO[] UserComments {
            get {
                return this.UserCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCommentsField, value) != true)) {
                    this.UserCommentsField = value;
                    this.RaisePropertyChanged("UserComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class CardDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardActivityDTO[] CardActivitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardListDTO CardListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CommentDTO[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.LabelColorDTO[] LabelColorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.UserDTO[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardActivityDTO[] CardActivities {
            get {
                return this.CardActivitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CardActivitiesField, value) != true)) {
                    this.CardActivitiesField = value;
                    this.RaisePropertyChanged("CardActivities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardListDTO CardList {
            get {
                return this.CardListField;
            }
            set {
                if ((object.ReferenceEquals(this.CardListField, value) != true)) {
                    this.CardListField = value;
                    this.RaisePropertyChanged("CardList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardName {
            get {
                return this.CardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNameField, value) != true)) {
                    this.CardNameField = value;
                    this.RaisePropertyChanged("CardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CommentDTO[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.LabelColorDTO[] LabelColors {
            get {
                return this.LabelColorsField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelColorsField, value) != true)) {
                    this.LabelColorsField = value;
                    this.RaisePropertyChanged("LabelColors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.UserDTO[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardActivityDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class CardActivityDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardDTO CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardActivityActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.UserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardDTO Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardActivityAction {
            get {
                return this.CardActivityActionField;
            }
            set {
                if ((object.ReferenceEquals(this.CardActivityActionField, value) != true)) {
                    this.CardActivityActionField = value;
                    this.RaisePropertyChanged("CardActivityAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class CommentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardDTO CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.UserDTO CommentAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentContentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardDTO Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.UserDTO CommentAuthor {
            get {
                return this.CommentAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentAuthorField, value) != true)) {
                    this.CommentAuthorField = value;
                    this.RaisePropertyChanged("CommentAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentContent {
            get {
                return this.CommentContentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentContentField, value) != true)) {
                    this.CommentContentField = value;
                    this.RaisePropertyChanged("CommentContent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabelColorDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.DTO")]
    [System.SerializableAttribute()]
    public partial class LabelColorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.CardDTO[] CardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.CardDTO[] Cards {
            get {
                return this.CardsField;
            }
            set {
                if ((object.ReferenceEquals(this.CardsField, value) != true)) {
                    this.CardsField = value;
                    this.RaisePropertyChanged("Cards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceInteraction.Services.Additional" +
        "Classes")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientUI.KrabServices.UserDTO UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientUI.KrabServices.UserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KrabServices.IKanbanSystemService", CallbackContract=typeof(ClientUI.KrabServices.IKanbanSystemServiceCallback))]
    public interface IKanbanSystemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddUserToBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddUserToBoardResponse")]
        void AddUserToBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddUserToBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddUserToBoardResponse")]
        System.Threading.Tasks.Task AddUserToBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveUserFromBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveUserFromBoardResponse")]
        void RemoveUserFromBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveUserFromBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveUserFromBoardResponse")]
        System.Threading.Tasks.Task RemoveUserFromBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddCardListToBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddCardListToBoardResponse")]
        void AddCardListToBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddCardListToBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddCardListToBoardResponse")]
        System.Threading.Tasks.Task AddCardListToBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveCardListFromBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveCardListFromBoardResponse")]
        void RemoveCardListFromBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveCardListFromBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveCardListFromBoardResponse")]
        System.Threading.Tasks.Task RemoveCardListFromBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RenameBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RenameBoardResponse")]
        void RenameBoard(ClientUI.KrabServices.BoardDTO board, string newName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RenameBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RenameBoardResponse")]
        System.Threading.Tasks.Task RenameBoardAsync(ClientUI.KrabServices.BoardDTO board, string newName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddCardToCardList", ReplyAction="http://tempuri.org/IKanbanSystemService/AddCardToCardListResponse")]
        void AddCardToCardList(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddCardToCardList", ReplyAction="http://tempuri.org/IKanbanSystemService/AddCardToCardListResponse")]
        System.Threading.Tasks.Task AddCardToCardListAsync(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveCardFromCardList", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveCardFromCardListResponse")]
        void RemoveCardFromCardList(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveCardFromCardList", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveCardFromCardListResponse")]
        System.Threading.Tasks.Task RemoveCardFromCardListAsync(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RenameCardList", ReplyAction="http://tempuri.org/IKanbanSystemService/RenameCardListResponse")]
        void RenameCardList(ClientUI.KrabServices.CardListDTO cardList, string newName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RenameCardList", ReplyAction="http://tempuri.org/IKanbanSystemService/RenameCardListResponse")]
        System.Threading.Tasks.Task RenameCardListAsync(ClientUI.KrabServices.CardListDTO cardList, string newName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddUserToCard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddUserToCardResponse")]
        void AddUserToCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddUserToCard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddUserToCardResponse")]
        System.Threading.Tasks.Task AddUserToCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveUserFromCard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveUserFromCardResponse")]
        void RemoveUserFromCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveUserFromCard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveUserFromCardResponse")]
        System.Threading.Tasks.Task RemoveUserFromCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddLabelColorToCard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddLabelColorToCardResponse")]
        void AddLabelColorToCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddLabelColorToCard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddLabelColorToCardResponse")]
        System.Threading.Tasks.Task AddLabelColorToCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveLabelColorFromCard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveLabelColorFromCardResponse")]
        void RemoveLabelColorFromCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveLabelColorFromCard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveLabelColorFromCardResponse")]
        System.Threading.Tasks.Task RemoveLabelColorFromCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddCommentToCard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddCommentToCardResponse")]
        void AddCommentToCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddCommentToCard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddCommentToCardResponse")]
        System.Threading.Tasks.Task AddCommentToCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveCommentFromCard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveCommentFromCardResponse")]
        void RemoveCommentFromCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveCommentFromCard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveCommentFromCardResponse")]
        System.Threading.Tasks.Task RemoveCommentFromCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/ChangeDueDateOfACard", ReplyAction="http://tempuri.org/IKanbanSystemService/ChangeDueDateOfACardResponse")]
        void ChangeDueDateOfACard(ClientUI.KrabServices.CardDTO card, System.DateTime date, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/ChangeDueDateOfACard", ReplyAction="http://tempuri.org/IKanbanSystemService/ChangeDueDateOfACardResponse")]
        System.Threading.Tasks.Task ChangeDueDateOfACardAsync(ClientUI.KrabServices.CardDTO card, System.DateTime date, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/ChangeNameOfACard", ReplyAction="http://tempuri.org/IKanbanSystemService/ChangeNameOfACardResponse")]
        void ChangeNameOfACard(ClientUI.KrabServices.CardDTO card, string newName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/ChangeNameOfACard", ReplyAction="http://tempuri.org/IKanbanSystemService/ChangeNameOfACardResponse")]
        System.Threading.Tasks.Task ChangeNameOfACardAsync(ClientUI.KrabServices.CardDTO card, string newName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/GetBoards", ReplyAction="http://tempuri.org/IKanbanSystemService/GetBoardsResponse")]
        ClientUI.KrabServices.BoardDTO[] GetBoards();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/GetBoards", ReplyAction="http://tempuri.org/IKanbanSystemService/GetBoardsResponse")]
        System.Threading.Tasks.Task<ClientUI.KrabServices.BoardDTO[]> GetBoardsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/UpdateBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/UpdateBoardResponse")]
        ClientUI.KrabServices.BoardDTO UpdateBoard(ClientUI.KrabServices.BoardDTO oldBoard, ClientUI.KrabServices.BoardDTO newBoard, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/UpdateBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/UpdateBoardResponse")]
        System.Threading.Tasks.Task<ClientUI.KrabServices.BoardDTO> UpdateBoardAsync(ClientUI.KrabServices.BoardDTO oldBoard, ClientUI.KrabServices.BoardDTO newBoard, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddBoardResponse")]
        void AddBoard(ClientUI.KrabServices.BoardDTO board, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/AddBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/AddBoardResponse")]
        System.Threading.Tasks.Task AddBoardAsync(ClientUI.KrabServices.BoardDTO board, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveBoardResponse")]
        void RemoveBoard(ClientUI.KrabServices.BoardDTO board, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RemoveBoard", ReplyAction="http://tempuri.org/IKanbanSystemService/RemoveBoardResponse")]
        System.Threading.Tasks.Task RemoveBoardAsync(ClientUI.KrabServices.BoardDTO board, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/Register", ReplyAction="http://tempuri.org/IKanbanSystemService/RegisterResponse")]
        bool Register(ClientUI.KrabServices.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/Register", ReplyAction="http://tempuri.org/IKanbanSystemService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(ClientUI.KrabServices.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/Login", ReplyAction="http://tempuri.org/IKanbanSystemService/LoginResponse")]
        ClientUI.KrabServices.UserInfo Login(ClientUI.KrabServices.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/Login", ReplyAction="http://tempuri.org/IKanbanSystemService/LoginResponse")]
        System.Threading.Tasks.Task<ClientUI.KrabServices.UserInfo> LoginAsync(ClientUI.KrabServices.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/Logout", ReplyAction="http://tempuri.org/IKanbanSystemService/LogoutResponse")]
        bool Logout(ClientUI.KrabServices.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/Logout", ReplyAction="http://tempuri.org/IKanbanSystemService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(ClientUI.KrabServices.UserInfo user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKanbanSystemServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/RefreshBoards", ReplyAction="http://tempuri.org/IKanbanSystemService/RefreshBoardsResponse")]
        void RefreshBoards(ClientUI.KrabServices.BoardDTO[] boards);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKanbanSystemService/InformAboutRegistration", ReplyAction="http://tempuri.org/IKanbanSystemService/InformAboutRegistrationResponse")]
        void InformAboutRegistration(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKanbanSystemServiceChannel : ClientUI.KrabServices.IKanbanSystemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KanbanSystemServiceClient : System.ServiceModel.DuplexClientBase<ClientUI.KrabServices.IKanbanSystemService>, ClientUI.KrabServices.IKanbanSystemService {
        
        public KanbanSystemServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public KanbanSystemServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public KanbanSystemServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public KanbanSystemServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public KanbanSystemServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void AddUserToBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user) {
            base.Channel.AddUserToBoard(board, user);
        }
        
        public System.Threading.Tasks.Task AddUserToBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user) {
            return base.Channel.AddUserToBoardAsync(board, user);
        }
        
        public void RemoveUserFromBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user) {
            base.Channel.RemoveUserFromBoard(board, user);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.UserInfo user) {
            return base.Channel.RemoveUserFromBoardAsync(board, user);
        }
        
        public void AddCardListToBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token) {
            base.Channel.AddCardListToBoard(board, cardList, token);
        }
        
        public System.Threading.Tasks.Task AddCardListToBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token) {
            return base.Channel.AddCardListToBoardAsync(board, cardList, token);
        }
        
        public void RemoveCardListFromBoard(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token) {
            base.Channel.RemoveCardListFromBoard(board, cardList, token);
        }
        
        public System.Threading.Tasks.Task RemoveCardListFromBoardAsync(ClientUI.KrabServices.BoardDTO board, ClientUI.KrabServices.CardListDTO cardList, string token) {
            return base.Channel.RemoveCardListFromBoardAsync(board, cardList, token);
        }
        
        public void RenameBoard(ClientUI.KrabServices.BoardDTO board, string newName, string token) {
            base.Channel.RenameBoard(board, newName, token);
        }
        
        public System.Threading.Tasks.Task RenameBoardAsync(ClientUI.KrabServices.BoardDTO board, string newName, string token) {
            return base.Channel.RenameBoardAsync(board, newName, token);
        }
        
        public void AddCardToCardList(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token) {
            base.Channel.AddCardToCardList(cardList, card, token);
        }
        
        public System.Threading.Tasks.Task AddCardToCardListAsync(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token) {
            return base.Channel.AddCardToCardListAsync(cardList, card, token);
        }
        
        public void RemoveCardFromCardList(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token) {
            base.Channel.RemoveCardFromCardList(cardList, card, token);
        }
        
        public System.Threading.Tasks.Task RemoveCardFromCardListAsync(ClientUI.KrabServices.CardListDTO cardList, ClientUI.KrabServices.CardDTO card, string token) {
            return base.Channel.RemoveCardFromCardListAsync(cardList, card, token);
        }
        
        public void RenameCardList(ClientUI.KrabServices.CardListDTO cardList, string newName, string token) {
            base.Channel.RenameCardList(cardList, newName, token);
        }
        
        public System.Threading.Tasks.Task RenameCardListAsync(ClientUI.KrabServices.CardListDTO cardList, string newName, string token) {
            return base.Channel.RenameCardListAsync(cardList, newName, token);
        }
        
        public void AddUserToCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user) {
            base.Channel.AddUserToCard(card, user);
        }
        
        public System.Threading.Tasks.Task AddUserToCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user) {
            return base.Channel.AddUserToCardAsync(card, user);
        }
        
        public void RemoveUserFromCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user) {
            base.Channel.RemoveUserFromCard(card, user);
        }
        
        public System.Threading.Tasks.Task RemoveUserFromCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.UserInfo user) {
            return base.Channel.RemoveUserFromCardAsync(card, user);
        }
        
        public void AddLabelColorToCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token) {
            base.Channel.AddLabelColorToCard(card, labelColor, token);
        }
        
        public System.Threading.Tasks.Task AddLabelColorToCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token) {
            return base.Channel.AddLabelColorToCardAsync(card, labelColor, token);
        }
        
        public void RemoveLabelColorFromCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token) {
            base.Channel.RemoveLabelColorFromCard(card, labelColor, token);
        }
        
        public System.Threading.Tasks.Task RemoveLabelColorFromCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.LabelColorDTO labelColor, string token) {
            return base.Channel.RemoveLabelColorFromCardAsync(card, labelColor, token);
        }
        
        public void AddCommentToCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token) {
            base.Channel.AddCommentToCard(card, comment, token);
        }
        
        public System.Threading.Tasks.Task AddCommentToCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token) {
            return base.Channel.AddCommentToCardAsync(card, comment, token);
        }
        
        public void RemoveCommentFromCard(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token) {
            base.Channel.RemoveCommentFromCard(card, comment, token);
        }
        
        public System.Threading.Tasks.Task RemoveCommentFromCardAsync(ClientUI.KrabServices.CardDTO card, ClientUI.KrabServices.CommentDTO comment, string token) {
            return base.Channel.RemoveCommentFromCardAsync(card, comment, token);
        }
        
        public void ChangeDueDateOfACard(ClientUI.KrabServices.CardDTO card, System.DateTime date, string token) {
            base.Channel.ChangeDueDateOfACard(card, date, token);
        }
        
        public System.Threading.Tasks.Task ChangeDueDateOfACardAsync(ClientUI.KrabServices.CardDTO card, System.DateTime date, string token) {
            return base.Channel.ChangeDueDateOfACardAsync(card, date, token);
        }
        
        public void ChangeNameOfACard(ClientUI.KrabServices.CardDTO card, string newName, string token) {
            base.Channel.ChangeNameOfACard(card, newName, token);
        }
        
        public System.Threading.Tasks.Task ChangeNameOfACardAsync(ClientUI.KrabServices.CardDTO card, string newName, string token) {
            return base.Channel.ChangeNameOfACardAsync(card, newName, token);
        }
        
        public ClientUI.KrabServices.BoardDTO[] GetBoards() {
            return base.Channel.GetBoards();
        }
        
        public System.Threading.Tasks.Task<ClientUI.KrabServices.BoardDTO[]> GetBoardsAsync() {
            return base.Channel.GetBoardsAsync();
        }
        
        public ClientUI.KrabServices.BoardDTO UpdateBoard(ClientUI.KrabServices.BoardDTO oldBoard, ClientUI.KrabServices.BoardDTO newBoard, string token) {
            return base.Channel.UpdateBoard(oldBoard, newBoard, token);
        }
        
        public System.Threading.Tasks.Task<ClientUI.KrabServices.BoardDTO> UpdateBoardAsync(ClientUI.KrabServices.BoardDTO oldBoard, ClientUI.KrabServices.BoardDTO newBoard, string token) {
            return base.Channel.UpdateBoardAsync(oldBoard, newBoard, token);
        }
        
        public void AddBoard(ClientUI.KrabServices.BoardDTO board, string token) {
            base.Channel.AddBoard(board, token);
        }
        
        public System.Threading.Tasks.Task AddBoardAsync(ClientUI.KrabServices.BoardDTO board, string token) {
            return base.Channel.AddBoardAsync(board, token);
        }
        
        public void RemoveBoard(ClientUI.KrabServices.BoardDTO board, string token) {
            base.Channel.RemoveBoard(board, token);
        }
        
        public System.Threading.Tasks.Task RemoveBoardAsync(ClientUI.KrabServices.BoardDTO board, string token) {
            return base.Channel.RemoveBoardAsync(board, token);
        }
        
        public bool Register(ClientUI.KrabServices.UserDTO user) {
            return base.Channel.Register(user);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(ClientUI.KrabServices.UserDTO user) {
            return base.Channel.RegisterAsync(user);
        }
        
        public ClientUI.KrabServices.UserInfo Login(ClientUI.KrabServices.UserDTO user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<ClientUI.KrabServices.UserInfo> LoginAsync(ClientUI.KrabServices.UserDTO user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool Logout(ClientUI.KrabServices.UserInfo user) {
            return base.Channel.Logout(user);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(ClientUI.KrabServices.UserInfo user) {
            return base.Channel.LogoutAsync(user);
        }
    }
}
